{"version":3,"sources":["components/AddCategory.jsx","helpers/getFetchGifts.js","components/CategoriesCollectionItem.jsx","components/CategoriesCollection.jsx","hooks/useFetchGifts.js","GiftExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","name","id","value","onChange","target","getFetchGifs","category","a","url","encodeURI","fetch","response","json","data","gifts","map","img","title","images","downsized_medium","CategoriesCollectionItem","className","src","alt","CategoriesCollection","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA9BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKjB,SACI,uBAAOO,KAAK,OAAOC,KAAK,MAAMC,GAAG,GAAGC,MAAQX,EACrCY,SAhBW,SAAET,GACxBF,EAAcE,EAAEU,OAAOF,a,+BCPlBG,EAAY,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAClBC,EADkB,0FACwEC,UAAUH,GADlF,sBAEDI,MAAMF,GAFL,cAElBG,EAFkB,gBAGDA,EAASC,OAHR,uBAGhBC,EAHgB,EAGhBA,KACFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAI3B,OAHIA,EAAIC,MAAMrB,OAAOC,OAAS,IAC1BmB,EAAIC,MAAQX,GAET,CACHL,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXlB,kBAejBM,GAfiB,4CAAH,sDCUVM,EATkB,SAAC,GAAwB,EAArBnB,GAAsB,IAAlBgB,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC5C,OACI,sBAAKa,UAAU,+CAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAKN,IACtB,4BAAKA,QCmBFO,EApBc,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECFrB,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WACPvB,EAAcC,GACTuB,MAAM,SAAAX,GAEHY,YAAY,WACRH,EAAS,CACLd,KAAMK,EACNO,SAAS,MAEd,UAGR,CAAEnB,IAGFoB,EDlB2BK,CAAczB,GAAnCY,EAFgC,EAErCL,KAAcY,EAFuB,EAEvBA,QAEtB,OACI,eAAC,WAAD,WACI,mCAAOnB,KACLmB,GAAW,4CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA6CA,GAAbA,EAAIf,aEW7C+B,EAvBM,WAAO,IAAD,EAEc1C,mBAAU,CAAC,kBAFzB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWiB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCZlC2B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.795250c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n           setCategories( categories => [ inputValue, ...categories ] );\r\n           setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input type=\"text\" name=\"add\" id=\"\" value={ inputValue }\r\n                   onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getFetchGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=u40V7DxnHmFmqDuHWo3gLIB4BzPrDCLb&q=${ encodeURI(category) }&limit=10`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifts = data.map( img => {\r\n        if (img.title.trim().length < 1) {\r\n            img.title = category;\r\n        }\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifts;\r\n}","import React from 'react';\r\n\r\nconst CategoriesCollectionItem = ( { id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__jackInTheBox\">\r\n            <img src={ url } alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoriesCollectionItem;\r\n","import React, {Fragment} from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifts\";\r\nimport CategoriesCollectionItem from \"./CategoriesCollectionItem\";\r\n\r\n\r\nconst CategoriesCollection = ( { category } ) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3> { category }</h3>\r\n            { loading && <p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>\r\n                        <CategoriesCollectionItem key={ img.id } {...img} />\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default CategoriesCollection;\r\n","import {useEffect, useState} from \"react\";\r\nimport {getFetchGifs} from \"../helpers/getFetchGifts\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getFetchGifs( category )\r\n            .then( images => {\r\n\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: images,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n\r\n            });\r\n        }, [ category ]\r\n    );\r\n\r\n    return state;\r\n}","import React, {Fragment, useState} from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport CategoriesCollection from \"./components/CategoriesCollection\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories ] = useState( ['One punch man']);\r\n\r\n    return (\r\n        <Fragment >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <CategoriesCollection\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GiftExpertApp\";\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}